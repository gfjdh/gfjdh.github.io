[{"title":"觉bot开发日记","url":"/2024/08/12/觉bot开发日记/","content":"三个插件共同构成的，带有一定货币属性的功能体系\n[签到：p-qiandao](https://github.com/gfjdh/koishi-plugin-p-qiandao) \n[涩图：p-setu](https://github.com/gfjdh/koishi-plugin-p-setu) \n[擦弹：p-graze](https://github.com/gfjdh/koishi-plugin-p-graze)\n\n以下是个人从零开始搭建bot到开始自己开发插件的感想和碎碎念\n## 2023年10月1日，国庆节。\n国庆假期第一天，在宿舍里百无聊赖的我心血来潮，上网搜索了qq机器人搭建，并且进入了koishi论坛，论坛里详细的教程和blocky的零代码开发功能让我眼前一亮。\n当时还没有官方的开放平台，我跟着liharp佬的教程一步一步完成了bot的搭建，虽然中间遇到了多次问题，但是都被一一解决，直到当天晚上，koishi的右下角亮起了绿灯。\n作为一个觉厨，我以古明地觉为原型制作的：觉bot，诞生了。\n我兴奋地用blocky创建了一些简单的插件，关键词对话之类的。\n\n第二天，我再次来到论坛搜索，在blocky板块寻找我感兴趣的插件。\n[最终选中了这个插件](https://forum.koishi.xyz/t/topic/626)\n签到成为了觉bot的第一个功能。到现在，虽然这个插件经过了我无数次的改造，但是仍然可以看到最初版的影子，并且觉bot的绝大部分功能都是围绕p点-签到体系构建的。近期，我将它改编成了正常的插件并且发布了。[签到插件储存库](https://github.com/gfjdh/koishi-plugin-p-qiandao)\n\n作为一个lsp，以及出于“我需要一个吸引人的功能”考虑，我又找了一个blocky编写的[涩图插件](https://forum.koishi.xyz/t/topic/5015)，这成为了觉的第二个核心功能，同样的，现在它已经是正常的插件并且发布在了插件市场。[涩图插件储存库](https://github.com/gfjdh/koishi-plugin-p-setu) ~~lolicon这个图库api真不知道造福多少bot）~~\n\n在本人~~臭不要脸~~的推广下，也是有了上百人的用户量，在群u的建议下自己用blocky编写了第三个核心功能：[擦弹](https://github.com/gfjdh/koishi-plugin-p-graze) 其实就是换皮的轮盘赌，被打中的人会爆p点到群奖池，其他人擦弹可以从群奖池里获取p点~~暗中克扣一部分还可以减少通胀~~。\n\n逐渐的，感觉用blocky编写插件有些力不从心了，很多想实现的功能受限制，数据库里的屎山更是看着都头大，于是萌生了学习代码编写插件的想法。\n本人之前**完全没接触过**typeScript和JavaScript，纯跟随koishi文档创建模板项目，然后把blocky编译出来的代码粘贴过来一点一点硬啃，不懂的就查koishi的官方文档或者问ai，最终在这个暑假完成了对全部blocky插件的重构。\n并且为从blocky数据库迁移用户数据到新数据库专门写了两个新插件[这是其中一个](https://github.com/gfjdh/koishi-plugin-p-bat)，如果有类似需求的朋友可以联系我使用~~（真有人用吗？）~~\n\n后来，涩图插件发的图总是频繁的被吞，深受群u抱怨。其实tx吞图的原理很简单，它只是检测到这一张图应该屏蔽，而实际上不看图的内容。所以我用puppeteer给获取到的图片渲染了1px的白边框，从此以后再也没有被吞过图。~~我觉得这个操作应该是我首创的~~\n\n直到现在，觉身上的功能已经基本完善，发布的插件也都得到了接近甚至满分的评价，我才决定把我写的插件在这里发布出来，虽然我也知道我写的基本是屎山，但是我个人感觉功能还是不错的。\n\n## 现在在做什么\n一是继续完善以p点为核心的功能。\n二是正在尝试接入ai。\n我一直觉得bot的灵魂就是要像一个**有情感的生命**，她们存在的意义就是带来情绪价值，自己手动写的提示语再有个性，终究也是死的，但是有ai就不一样了。\n+ 为什么不用OpenAi：gpt固然好，但是门槛真是高，用官方接口的话注册账号是问题，用第三方接口的话价格又不便宜，简单的对话没必要要求那么高，所以我选择国产模型。\n\n接口大部分是要收费的，但是我偶然间找到了一个可以免费使用一个月的接口，并且看上去性能还不错，于是着手开发接入它的插件。\n说是开发，其实是魔改其他人的插件，~~惨遭我毒手的是~~ [davinci-003](https://github.com/initialencounter/2022-12-24/tree/neat/plugins/AI/davinci-003#readme)插件，目前经过我的改造已经可以使用了，但是我不确定这种插件能不能发布在插件市场，而且还有很多bug和设想的功能没搞完。\n\n## 未来的计划？\n1.我想让觉有长期记忆。\n具体实现思路基本是天马行空，而且以我的码力遥不可及\n2.自我保护功能\n比如检测到屏蔽词拉黑，被禁言退群之类的，目前没有针对我使用的接入方式的相关插件~~可能是不支持？~~。\n\n## 最后来一些自己总结的小教训\n**实例爆炸了如何抢救？**：勤备份比什么都强，但是如果已经无法挽回，在双清之前把data文件夹里的koishi.db抢救出来是个好选择，至少可以保住数据库里的数据，插件什么的重新安装就好。\n**如何在本地安装自己编写的插件？**：按标准格式命名文件夹然后把lib文件夹，package.json和readme丢进去，再把这个文件夹放进node_modules，最后重启实例，在插件全局设置左上角添加插件即可。但是注意，这么做属于不安全行为，请考虑清楚后果再操作。\n\n暂时先这些，以后这个帖子可能长期更新"},{"title":"Hello World","url":"/2024/08/04/hello-world/","content":"Welcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/one-command-deployment.html)\n"}]